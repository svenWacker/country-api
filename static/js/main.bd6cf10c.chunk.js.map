{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","Fragment","Country","results","getCountry","lands","map","obj","i","console","log","name","flag","capital","population","borders","languages","border","onClick","lang","iso639_1","src","alt","className","App","useState","userInput","setUserInput","setResults","loading","setLoading","useEffect","setTimeout","status","countryName","textToUrl","encodeURIComponent","endPoint","axios","then","data","catch","err","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAUeA,EARC,WACd,OACE,eAAC,IAAMC,SAAP,WACE,8CACA,sDC2BSC,EA/BC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACpBC,EAAQF,EAAQG,KAAI,SAACC,EAAKC,GAC9BC,QAAQC,IAAIH,GACZ,IAAQI,EAAwDJ,EAAxDI,KAAMC,EAAkDL,EAAlDK,KAAMC,EAA4CN,EAA5CM,QAASC,EAAmCP,EAAnCO,WAAYC,EAAuBR,EAAvBQ,QAASC,EAAcT,EAAdS,UAClD,OACE,gCACE,6BAAKL,IACL,2CAAcE,KACd,8CAAiBC,KACjB,6BACGC,EAAQT,KAAI,SAACW,EAAQT,GAAT,OACX,oBAAWU,QAAS,kBAAMd,EAAW,OAAQa,IAA7C,sBACgBA,IADRT,QAKZ,2CAEGQ,EAAUV,KAAI,SAACa,GAAD,OACb,oBAAID,QAAS,kBAAMd,EAAW,OAAQe,EAAKC,WAA3C,SACGD,EAAKR,aAIZ,qBAAKU,IAAKT,EAAMU,IAAKX,EAAMY,UAAU,WAnB7Bf,MAwBd,OAAO,cAAC,IAAMP,SAAP,UAAiBI,KCoBXmB,EA/CH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOtB,EAAP,KAAgByB,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,WACRC,YAAW,WACTF,GAAW,KACV,OACF,IACH,IAAM1B,EAAa,SAAC6B,EAAQC,GAC1B,IAAIC,EAAYC,mBAAmBF,GAC/BG,EAAQ,2CAAuCJ,EAAvC,YAAiDE,GAM7DG,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcZ,EAAWY,MAC9BC,OAAM,SAACC,GAAD,OAASjC,QAAQC,IAAR,sBAA2BgC,QAU/C,OAAIb,EAAgB,cAAC,EAAD,IAGlB,eAAC,IAAM5B,SAAP,WACE,uBAAM0C,SATV,SAAsBC,GACpBA,EAAEC,iBACFzC,EAAW,OAAQsB,GACnBC,EAAa,KAMX,UACE,uBACEmB,KAAK,OACLC,MAAOrB,EACPsB,SAhBR,SAAsBJ,GACpBjB,EAAaiB,EAAEK,OAAOF,QAgBhBG,YAAY,yBAEd,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,EAAD,CAAS3C,QAASA,EAASC,WAAYA,QCzC7C+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd6cf10c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <React.Fragment>\n      <h4>ðŸ•¸</h4>\n      <h6>It is loading...</h6>\n    </React.Fragment>\n  );\n};\nexport default Loading;\n","import React from \"react\";\n\nconst Country = ({ results, getCountry }) => {\n  const lands = results.map((obj, i) => {\n    console.log(obj);\n    const { name, flag, capital, population, borders, languages } = obj;\n    return (\n      <div key={i}>\n        <h2>{name}</h2>\n        <h5>Capital: {capital}</h5>\n        <h5>Population: {population}</h5>\n        <h5>\n          {borders.map((border, i) => (\n            <i key={i} onClick={() => getCountry(\"name\", border)}>\n              &nbsp;&nbsp; {border}\n            </i>\n          ))}\n        </h5>\n        <h5>\n          language:\n          {languages.map((lang) => (\n            <h6 onClick={() => getCountry(\"lang\", lang.iso639_1)}>\n              {lang.name}\n            </h6>\n          ))}\n        </h5>\n        <img src={flag} alt={name} className=\"flag\" />\n      </div>\n    );\n  });\n\n  return <React.Fragment>{lands}</React.Fragment>;\n};\nexport default Country;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\nconst App = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const getCountry = (status, countryName) => {\n    let textToUrl = encodeURIComponent(countryName);\n    let endPoint = `https://restcountries.eu/rest/v2/${status}/${textToUrl}`;\n\n    // fetch(endPoint)\n    // .then((res)=> res.json())\n    // .then((data)=>setResults(data))\n\n    axios(endPoint)\n      .then(({ data }) => setResults(data))\n      .catch((err) => console.log(`Your had an ${err}`));\n  };\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    getCountry(\"name\", userInput);\n    setUserInput(\"\");\n  }\n  if (loading) return <Loading />;\n\n  return (\n    <React.Fragment>\n      <form onSubmit={submitHandle}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={changeHandle}\n          placeholder=\"Write a country name\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <Country results={results} getCountry={getCountry} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}